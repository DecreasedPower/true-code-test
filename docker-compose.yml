services:
  gateway:
    build:
      context: ./Gateway
      dockerfile: Dockerfile
    container_name: gateway
    ports:
      - "5000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ServiceConfiguration__UserService=http://user-service:8080
      - ServiceConfiguration__FinanceService=http://finance-service:5004
      - JWT__PublicKeyBase64=${PUBLIC_KEY}
      - JWT__Issuer=${ISSUER}
      - JWT__Audience=${AUDIENCE}
    depends_on:
      - currency-service
      - user-service
      - finance-service
    networks:
      - backend

  currency-service:
    build:
      context: ./CurrencyService
      dockerfile: Dockerfile
    container_name: currency-service
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DbConnectionString=Host=postgres;Port=5432;Database=${CURRENCY_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
    depends_on:
      - postgres
    networks:
      - backend

  user-service:
    build:
      context: ./UserService
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "5002:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DbConnectionString=Host=postgres;Port=5432;Database=${CURRENCY_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - JWT__PublicKeyBase64=${PUBLIC_KEY}
      - JWT__PrivateKeyBase64=${PRIVATE_KEY}
      - JWT__AccessTokenExpiryMinutes=${ACCESS_TOKEN_LIFITIME_IN_MINUTES}
      - JWT__RefreshTokenExpiryDays=${REFRESH_TOKEN_LIFITIME_IN_DAYS}
      - JWT__Issuer=${ISSUER}
      - JWT__Audience=${AUDIENCE}
    depends_on:
      - postgres
    networks:
      - backend

  finance-service:
    build:
      context: ./FinanceService
      dockerfile: Dockerfile
    container_name: finance-service
    ports:
      - "5003:8080"
      - "5004:5004"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DbConnectionString=Host=postgres;Port=5432;Database=${CURRENCY_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - JWT__PublicKeyBase64=${PUBLIC_KEY}
      - ServicePort=8080
    depends_on:
      - postgres
    networks:
      - backend

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${CURRENCY_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend

volumes:
  pgdata:

networks:
  backend:
    driver: bridge